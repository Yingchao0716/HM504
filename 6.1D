
import matplotlib.pyplot as plt
import numpy as np


def simStock(S0, mu,sig,T,N):
	dt = float(T) / N
	x0 = np.log(S0)
	
	logsimincs = ((mu - float(sig)**2/2)*dt )+ (sig*np.sqrt(dt))*np.random.normal(size = N)
	
	logsvals = [x0]
	
	for n in range(N-1):
		logsvals.append( logsvals[-1] + logsimincs[n] )
		
	return np.exp(logsvals)

def simBond(B0,r,T,N):
        
	dt = float(T)/N
	
	logbvals = [np.log(B0)]
	
	for n in range(N-1):
		logbvals.append( logbvals[-1] + r*dt)
	return np.exp(logbvals)


def simHedge(slist,blist,grid,mu,sig,p,T,N):
	
	Delta = p*(np.array(slist)**(p-1))*np.exp( (sig**2 *p / 2 + r)*(p-1)*(T-np.array(grid)))
	
	X0 = (slist[0]**p)*np.exp((sig**2 *p / 2 + r)*(p-1)*T)
	
	xlist = [X0]
	for n in range(1,N):
		xlist.append( xlist[-1] + Delta[n-1]*(slist[n] - slist[n-1]) + (xlist[-1] - Delta[n-1]*slist[n]) * (blist[n] - blist[n-1])/blist[n])
	
	return xlist

def simOption(slist,grid,mu,sig,r,T,N):
	
	return np.array((slist))**p * np.exp( (((sig**2) * p )/2 + r) *(p -1)*np.array((T - grid)))


if __name__ == "__main__":
	
	with open('input.txt','r') as f:
		params = [float(n) for n in f.read().split(',')]
		params[-1] = int(params[-1])
		params[-2] = int(params[-2])
		params[-3] = int(params[-3])
		
	S0,B0,mu,sig,r,T,p,N,M = tuple(params)
	
	slist = simStock(S0,mu,sig,T,N)
	
	blist = simBond(B0,r,T,N)
	
	grid = np.linspace(0,float(T),N)
	
	xlist = simHedge(slist,blist,grid,mu,sig,p,T,N)
	
	vlist = simOption(slist,grid,mu,sig,r,T,N)
		
	
	fig, ax = plt.subplots( nrows=1, ncols=1 ) 
	sp = ax.plot(grid, slist  ,label="Stock")
	xp = ax.plot(grid, xlist  ,label="Xt")
	xp = ax.plot(grid, vlist  ,label="Vt")
	plt.legend()
	fig.savefig('plot6.1-D.png')   
	plt.close(fig)    

#%%
